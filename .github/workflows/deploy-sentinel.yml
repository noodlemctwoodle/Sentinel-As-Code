name: Deploy Sentinel Resources

on:
  push:
    branches: [ main ]
  # Enable manual trigger
  workflow_dispatch:
    inputs:
      resourceGroup:
        description: 'Azure Resource Group for Sentinel deployment'
        required: true
        type: string
      workspaceName:
        description: 'Sentinel Workspace Name'
        required: true
        type: string
      region:
        description: 'Azure Region'
        required: true
        type: string
        default: 'eastus'
      dailyQuota:
        description: 'Log Analytics Daily Quota (GB)'
        required: true
        type: string
        default: '10'
      sentinelSolutions:
        description: 'Sentinel Solutions to deploy (comma-separated, in quotes)'
        required: true
        type: string
        default: '"Azure Activity","Microsoft 365","Threat Intelligence"'
      arSeverities:
        description: 'Analytics Rule Severities to include (comma-separated, in quotes)'
        required: true
        type: string
        default: '"High","Medium","Low"'
      isGov:
        description: 'Is Government Cloud'
        required: true
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read

jobs:
  check-resources:
    name: Check if Sentinel Resources Exist
    runs-on: ubuntu-latest
    outputs:
      resources_exist: ${{ steps.check-resources.outputs.resources_exist }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Check for Existing Resources
        id: check-resources
        shell: pwsh
        run: |
          # Define variables
          $resourceGroupName = "${{ github.event.inputs.resourceGroup || secrets.AZURE_RESOURCE_GROUP }}"
          $workspaceName = "${{ github.event.inputs.workspaceName || secrets.AZURE_WORKSPACE_NAME }}"
          $resourcesExist = "false"
          
          Write-Output "Checking if Sentinel resources already exist in Resource Group: $resourceGroupName..."
          
          # Check if the Log Analytics Workspace exists
          $law = Get-AzOperationalInsightsWorkspace -ResourceGroupName $resourceGroupName -Name $workspaceName -ErrorAction SilentlyContinue
          if ($law) {
              Write-Output "Log Analytics Workspace ($workspaceName) found."
              $resourcesExist = "true"
          } else {
              Write-Output "Log Analytics Workspace ($workspaceName) not found."
          }
          
          # Set output variable for next job
          Write-Output "Setting resources_exist to: $resourcesExist"
          echo "resources_exist=$resourcesExist" >> $env:GITHUB_OUTPUT

  deploy-bicep:
    name: Deploy Microsoft Sentinel Infrastructure via Bicep
    runs-on: ubuntu-latest
    needs: check-resources
    if: ${{ needs.check-resources.outputs.resources_exist == 'false' }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Deploy Sentinel Infrastructure with Bicep Template
        shell: bash
        run: |
          echo "Starting Bicep Deployment..."
          
          region="${{ github.event.inputs.region || secrets.AZURE_REGION }}"
          resourceGroup="${{ github.event.inputs.resourceGroup || secrets.AZURE_RESOURCE_GROUP }}"
          workspaceName="${{ github.event.inputs.workspaceName || secrets.AZURE_WORKSPACE_NAME }}"
          dailyQuota="${{ github.event.inputs.dailyQuota || secrets.AZURE_DAILY_QUOTA || '10' }}"
          
          az deployment sub create \
            --location "$region" \
            --template-file Bicep/main.bicep \
            --parameters rgLocation="$region" rgName="$resourceGroup" lawName="$workspaceName" dailyQuota="$dailyQuota"

  enable-sentinel-content:
    name: Enable Sentinel Solutions and Configure Alert Rules
    runs-on: ubuntu-latest
    needs: [check-resources, deploy-bicep]
    if: always() # Ensures this job runs even if deploy-bicep is skipped
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Sentinel Solution Deployment
        shell: pwsh
        continue-on-error: true
        run: |
          $resourceGroup = "${{ github.event.inputs.resourceGroup || secrets.AZURE_RESOURCE_GROUP }}"
          $workspaceName = "${{ github.event.inputs.workspaceName || secrets.AZURE_WORKSPACE_NAME }}"
          $region = "${{ github.event.inputs.region || secrets.AZURE_REGION }}"
          $sentinelSolutions = ${{ github.event.inputs.sentinelSolutions || secrets.AZURE_SENTINEL_SOLUTIONS }}
          $arSeverities = ${{ github.event.inputs.arSeverities || secrets.AZURE_AR_SEVERITIES }}
          $isGov = "${{ github.event.inputs.isGov || secrets.AZURE_IS_GOV || 'false' }}"
          
          ./Scripts/Set-SentinelContent.ps1 `
            -ResourceGroup "$resourceGroup" `
            -Workspace "$workspaceName" `
            -Region "$region" `
            -Solutions $sentinelSolutions `
            -SeveritiesToInclude $arSeverities `
            -IsGov "$isGov"